<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.3.xsd 
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd 
    http://www.springframework.org/schema/tx 
    http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    <!--读取db.properties -->
    <context:property-placeholder location="classpath:config/db.properties"/>
    <!-- 配置数据源 -->
    <bean id="dataSource" 
         class="org.apache.commons.dbcp2.BasicDataSource">
		<!--数据库驱动 -->
		<property name="driverClassName" value="${jdbc.driver}" />
		<!--连接数据库的url -->
		<property name="url" value="${jdbc.url}" />
		<!--连接数据库的用户名 -->
		<property name="username" value="${jdbc.username}" />
		<!--连接数据库的密码 -->
		<property name="password" value="${jdbc.password}" />
		<!--最大连接数 -->
		<property name="maxTotal" value="${jdbc.maxTotal}" />
		<!--最大空闲连接  -->
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<!--初始化连接数  -->
		<property name="initialSize" value="${jdbc.initialSize}" />
	</bean>
	<!-- 事务管理器 -->
	<bean id="transactionManager" class=
	"org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 传播行为 -->
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="find*" propagation="SUPPORTS" 
                                           read-only="true" />
			<tx:method name="select*" propagation="SUPPORTS" 
                                           read-only="true" />
			<tx:method name="get*" propagation="SUPPORTS" 
                                           read-only="true" />
		</tx:attributes>
	</tx:advice>
	<!-- 切面 -->
	<!--<aop:config>-->
		<!--<aop:advisor advice-ref="txAdvice"-->
					 <!--pointcut="execution(*jee.support.service.*.*(..))" />-->
	<!--</aop:config>-->
	<!-- 配置 MyBatis的工厂 -->
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBatis的核心配置文件所在位置 -->
		<property name="configLocation" 
                     value="classpath:config/mybatis-config.xml" />

		<!-- 配置mybatis分页插件PageHelper -->
		<!--<property name="plugins">-->
			<!--<array>-->
				<!--<bean class="com.github.pagehelper.PageInterceptor">-->
					<!--<property name="properties">-->
						<!--&lt;!&ndash; 什么都不配，使用默认的配置 &ndash;&gt;-->
						<!--<value></value>-->
					<!--</property>-->
				<!--</bean>-->
			<!--</array>-->
		<!--</property>-->

	</bean>
	<!-- 接口开发,扫描 jee.support.da包 ，写在此包下的接口即可被扫描到 -->
	<!--1.需要将xml文件和dao接口文件放在同一个package下,而且文件名要一致-->
	<!--2.xml文件的namespace和接口的类路径相同-->

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="jee.support.dao" />
<!--		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->
	</bean>
	<!-- 配置扫描@Service注解 -->
	<!--扫描指定的包-->
	<context:component-scan base-package="jee.support.service.impl"/>
</beans>
