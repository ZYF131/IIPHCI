<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="jee.support.dao.AdminMapper" >
    <resultMap id="BaseResultMap" type="jee.support.model.Admin" >
        <id column="adminId" property="adminid" jdbcType="BIGINT" />
        <result column="adminname" property="adminname" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="accountNonExpired" property="accountnonexpired" jdbcType="BIT" />
        <result column=" accountNonLocked" property=" accountnonlocked" jdbcType="BIT" />
        <result column="enabled" property="enabled" jdbcType="BIT" />
        <result column="email" property="email" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        adminId,
        adminname,
        password,
        accountNonExpired,
         accountNonLocked,
        enabled,
        email
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from admin
        where
        adminId = #{adminid,jdbcType=BIGINT}
            
    </select>

    <delete id="deleteByPrimaryKey" >
        delete from admin
        where
        adminId = #{adminid,jdbcType=BIGINT}
        
    </delete>

    <delete id="deleteByPrimaryKeys" >
        delete from admin
        where <foreach collection="primaryKeys" item = "primaryKey" separator=" or " >adminId = #{primaryKey,jdbcType=BIGINT}</foreach>
    </delete>

    <insert id="insert" parameterType="jee.support.model.Admin" >
        insert into admin (
            adminId,
            adminname,
            password,
            accountNonExpired,
             accountNonLocked,
            enabled,
            email
        )
        values (
            #{adminid,jdbcType=BIGINT},
            #{adminname,jdbcType=VARCHAR},
            #{password,jdbcType=VARCHAR},
            #{accountnonexpired,jdbcType=BIT},
            #{ accountnonlocked,jdbcType=BIT},
            #{enabled,jdbcType=BIT},
            #{email,jdbcType=VARCHAR}
        )
    </insert>

    <insert id="insertSelective" parameterType="jee.support.model.Admin" >
        insert into admin
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="adminid != null" >
                adminId,
            </if>
            <if test="adminname != null" >
                adminname,
            </if>
            <if test="password != null" >
                password,
            </if>
            <if test="accountnonexpired != null" >
                accountNonExpired,
            </if>
            <if test=" accountnonlocked != null" >
                 accountNonLocked,
            </if>
            <if test="enabled != null" >
                enabled,
            </if>
            <if test="email != null" >
                email,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="adminid != null" >
                #{adminid,jdbcType=BIGINT},
            </if>
            <if test="adminname != null" >
                #{adminname,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="accountnonexpired != null" >
                #{accountnonexpired,jdbcType=BIT},
            </if>
            <if test=" accountnonlocked != null" >
                #{ accountnonlocked,jdbcType=BIT},
            </if>
            <if test="enabled != null" >
                #{enabled,jdbcType=BIT},
            </if>
            <if test="email != null" >
                #{email,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="jee.support.model.Admin" >
        update admin
        <set >
            <if test="adminid != null" >
                adminId = #{adminid,jdbcType=BIGINT},
            </if>
            <if test="adminname != null" >
                adminname = #{adminname,jdbcType=VARCHAR},
            </if>
            <if test="password != null" >
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="accountnonexpired != null" >
                accountNonExpired = #{accountnonexpired,jdbcType=BIT},
            </if>
            <if test=" accountnonlocked != null" >
                 accountNonLocked = #{ accountnonlocked,jdbcType=BIT},
            </if>
            <if test="enabled != null" >
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
            </if>
        </set>
            where
            adminId = #{adminid,jdbcType=BIGINT}
                
    </update>

    <update id="updateByPrimaryKey" parameterType="jee.support.model.Admin" >
        update admin
        set
        <trim suffixOverrides="," >
            adminname = #{adminname,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            accountNonExpired = #{accountnonexpired,jdbcType=BIT},
             accountNonLocked = #{ accountnonlocked,jdbcType=BIT},
            enabled = #{enabled,jdbcType=BIT},
            email = #{email,jdbcType=VARCHAR},
        </trim>
        where
        adminId = #{adminid,jdbcType=BIGINT}
            
    </update>

    <select id="loadModels" resultMap="BaseResultMap">
        select
        <if test="parameters != null">
            ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if>
        from admin
        <if test="condition != null">
            where ${condition}
        </if>
        <if test="order != null and sort != null">
            order by ${order} ${sort}
        </if>
        <if test="offset != -1 and limit != -1">
            limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <select id="loadMaps" resultType="java.util.HashMap">
        select
        <if test="parameters != null">
         ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if>
        from admin
        <if test="condition != null">
            where ${condition}
        </if>
        <if test="order != null and sort != null">
            order by ${order} ${sort}
        </if>
        <if test="offset != -1 and limit != -1">
            limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <select id="count" resultType="long">
        select count(
        <if test="isDistinct == true">
            distinct
        </if>
        <if test="parameters != null">
            ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if>
        ) from admin
        <if test="condition != null">
            where ${condition}
        </if>
    </select>

    <select id="findModel" resultMap="BaseResultMap" >
        select
        <if test="parameters != null">
            ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if> from admin
        where
        adminId = #{adminid,jdbcType=BIGINT}
            
    </select>

    <select id="findMap" resultType="java.util.HashMap" >
        select
        <if test="parameters != null">
            ${parameters}
        </if>
        <if test="parameters == null">
            *
        </if> from admin
        where
        adminId = #{adminid,jdbcType=BIGINT}
            
    </select>
</mapper>