(function (a) {
    "use strict";
    var b = "images/pro.png",
        c = new Image;
    c.src = b;
    a.fn.percentageLoader = function (b) {
        var d,
            e,
            f,
            g,
            h,
            i,
            j,
            k,
            l,
            m,
            n,
            o,
            p,
            q,
            r,
            s,
            t,
            u,
            v,
            w,
            x,
            y,
            z,
            max,
            A,
            B,
            C,
            D,
            E,
            F,
            G,
            H,
            I;
        d = {
            width: 157,
            height: 157,
            progress: 0,
            value: "0kb"
        };
        if (b !== undefined) {
            a.extend(d, b)
        }
        H = document.createElement("div");
        H.style.width = d.width + "px";
        H.style.height = d.height + "px";
        H.style.position = "relative";
        a(this).append(H);
        e = document.createElement("canvas");
        e.setAttribute("width", d.width);
        e.setAttribute("height", d.height);
        H.appendChild(e);
        f = document.createElement("div");
        f.style.width = d.width.toString() - 2 + "px";
        f.style.textAlign = "center";
        f.style.height = "50px";
        f.style.left = 0;
        f.style.position = "absolute";
        g = document.createElement("div");
        g.style.width = (d.width - 2).toString() + "px";
        g.style.textAlign = "center";
        g.style.height = "0px";
        g.style.overflow = "hidden";
        g.style.left = 0;
        g.style.position = "absolute";
        h = [g, f];
        for (i = 0; i < h.length; i += 1) {

            j = h[i];
            k = ["-webkit-user-select", "-khtml-user-select", "-moz-user-select", "-o-user-select", "user-select"];
            for (l = 0; l < k.length; l += 1) {
                a(j).css(k[l], "none")
            }
        }
        H.appendChild(f);
        H.appendChild(g);
        m = e.getContext("2d");
        p = e.width / 2 - 1;
        q = e.height / 2 - 1;
        r = m.createLinearGradient(p, 0, p, e.height);
        r.addColorStop(0, "#d6eeff");
        r.addColorStop(1, "#b6d8f0");
        s = m.createLinearGradient(p, p * .133333, p, e.height - p * .133333);
        s.addColorStop(0, "#f9fcfe");
        s.addColorStop(1, "#d9ebf7");
        t = m.createLinearGradient(p, 0, p, e.height);
        t.addColorStop(0, "#c1dff4");
        t.addColorStop(1, "#aacee6");
        u = p * .6666;
        x = p - 2;
        v = u + p * .06;
        w = x - p * .06;
        y = 2.1707963267949;
        z = .9707963267949 + Math.PI * 2;
        A = false;
        m.lineWidth = 1;
        E = function (a, b, c) {
            return {
                x: a.x + Math.cos(b) * c,
                y: a.y + Math.sin(b) * c
            }
        };
        F = function () {
            function a(a, b) {
                var c,
                    d,
                    e,
                    f,
                    g,
                    h,
                    i,
                    j;
                c = {
                    x: p,
                    y: q
                };
                d = E(c, a, v);
                m.moveTo(d.x, d.y);
                i = E(c, b, v);
                j = E(c, b, w);
                e = b + 3.142 / 2;
                f = p * .2 - 4;
                g = E(i, e, f);
                h = E(j, e, f);
                m.arc(p, q, v, a, b, false);
                m.bezierCurveTo(g.x, g.y, h.x, h.y, j.x, j.y);
                m.arc(p, q, w, b, a, true);
                i = E(c, a, v);
                j = E(c, a, w);
                e = a - 3.142 / 2;
                g = E(j, e, f);
                h = E(i, e, f);
                m.bezierCurveTo(g.x, g.y, h.x, h.y, i.x, i.y)
            }

            m.clearRect(0, 0, e.width, e.height);
            m.fillStyle = r;
            m.beginPath();
            m.strokeStyle = "#fff";
            m.arc(p, q, x, 0, 0, A);
            m.fill();
            m.stroke();
            m.fillStyle = s;
            m.beginPath();
            m.arc(p, q, u, 0, 0, A);
            m.fill();
            m.strokeStyle = "#fff";
            m.stroke();
            m.beginPath();
            m.beginPath();
            m.strokeStyle = "#fff";
            a(y, z);
            m.fillStyle = t;
            m.fill();
            m.stroke();
            B = y + n * (z - y);
            m.beginPath();
            a(y, B);
            m.save();
            m.clip();
            m.drawImage(c, 0, 0, e.width, e.height);
            m.restore();
            m.beginPath();
            a(y, B);
            m.stroke();
            (function () {
                var a,
                    b,
                    c,
                    e;
                a = p / 3;
                f.style.top = (d.height / 2 - a / 4).toString() + "px";
                f.style.left = -15 + "px";
                f.style.color = "#fff";
                f.style.font = a.toString() + "px BebasNeueRegular";
                f.style.textShadow = "0 1px 1px #FFFFFF";
                b = (n * 100).toFixed(0);
                f.innerHTML = b;
                c = p / 5.5;
                g.style.color = "#fff";
                g.style.font = c.toString() + "px BebasNeueRegular";
                g.style.height = c.toString() + "px";
                g.style.textShadow = "None";
                e = d.height * .16666666 - c;
                g.style.top = (d.height * .8333333 + e / 4).toString() + "px"
            })()
        };
        G = function () {
            if (n < 0) {
                n = 0
            }
            if (n > 1) {
                n = 1
            }
        };
        C = function (a) {
            n = a;
            G();
            F()
        };

        I = function (a) {
            max = a;

        };

        this.setProgress = C;
        D = function (a) {
            o = a;
            g.innerHTML = o
        };
        this.setValue = D;
        this.setMaxValue = I;
        this.setValue(d.value);
        n = d.progress;
        G();
        F();
        if (b.controllable === true) {
            (function () {
                var c,
                    d,
                    e;
                d = function (a, b) {
                    return Math.sqrt(Math.pow(a - p, 2) + Math.pow(b - q, 2))
                };
                c = false;
                e = function (a, c) {
                    var d,
                        e,
                        f,
                        g,
                        h,
                        i;
                    d = a - p;
                    e = c - q;
                    f = Math.atan2(e, d);
                    if (f > Math.PI / 2) {
                        f -= Math.PI * 2
                    }
                    g = y - Math.PI * 2;
                    h = z - y;
                    i = (f - g) / h;
                    C(i);
                    if (b.onProgressUpdate) {
                        b.onProgressUpdate(n)
                    }
                };
                a(H).mousedown(function (b) {
                    var f,
                        g,
                        h,
                        i;
                    f = a(this).offset();
                    g = b.pageX - f.left;
                    h = b.pageY - f.top;
                    i = d(g, h);
                    if (i > u && i < x) {
                        c = true;
                        e(g, h)
                    }
                }).mouseup(function () {
                    c = false
                }).mousemove(function (b) {
                    var d,
                        f,
                        g;
                    if (c) {
                        d = a(H).offset();
                        f = b.pageX - d.left;
                        g = b.pageY - d.top;
                        e(f, g)
                    }
                }).mouseleave(function () {
                    c = false
                })
            })()
        }
        return this
    }
})(jQuery)